/// <reference types="node" />
import { IncomingMessage } from "http";
import { Song, UserInfo, Playlist as SCCPlaylist } from "soundcloud-scraper";
import { DurationType } from "../typings/base";
import { SCArtist, SCPlaylist, SCTrack } from "../typings/soundcloud";
import { Base } from "../Base";
declare class SoundCloudTrack extends Base implements SCTrack {
    readonly title: string;
    readonly url: string;
    readonly id: string;
    readonly picture: string;
    readonly duration: DurationType;
    private raw;
    constructor(data: Song);
    _DurationFormater(data: number, isMs?: boolean): DurationType;
    artist(): Promise<SoundCloudArtist>;
    stream(): Promise<IncomingMessage>;
}
declare class SoundCloudArtist extends Base implements SCArtist {
    readonly name: string;
    readonly url: string;
    readonly id: string | Number;
    readonly picture: string;
    private raw;
    constructor(data: UserInfo);
    tracks(): Promise<SoundCloudTrack[]>;
}
declare class SoundCloudPlaylist extends Base implements SCPlaylist {
    readonly title: string;
    readonly id: string | number;
    readonly url: string;
    readonly picture: string;
    readonly size: Number;
    readonly description: string;
    private raw;
    constructor(data: SCCPlaylist);
    tracks(): Promise<SoundCloudTrack[]>;
    publisher(): Promise<SoundCloudArtist>;
}
export { SoundCloudTrack, SoundCloudArtist, SoundCloudPlaylist };
