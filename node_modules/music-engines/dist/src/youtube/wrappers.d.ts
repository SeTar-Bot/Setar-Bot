import { downloadOptions } from "ytdl-core";
import { Artist, DurationType } from "../typings/base";
import { YTPlaylist, YTTrack } from "../typings/youtube";
import { opus, FFmpeg } from "prism-media";
import { Base } from "../Base";
declare class YouTubeArtist extends Base implements Artist {
    readonly id: string;
    readonly name: string;
    readonly picture: string;
    readonly url: string;
    private raw;
    constructor(data: any);
}
declare class YouTubePlaylist extends Base implements YTPlaylist {
    readonly publisher: Artist;
    readonly id: string;
    readonly title: string;
    readonly description: string;
    readonly url: string;
    readonly picture: string;
    readonly size: Number;
    tracks: () => Promise<YouTubeTrack[]>;
    private raw;
    constructor(data: any);
}
declare class YouTubeTrack extends Base implements YTTrack {
    readonly id: string;
    readonly picture: string;
    readonly url: string;
    readonly title: string;
    readonly duration: DurationType;
    _DurationFormater: (data: number, isMs: boolean) => DurationType;
    stream: (ytdlParams?: downloadOptions) => opus.Encoder | FFmpeg;
    private raw;
    constructor(data: any);
}
export { YouTubePlaylist, YouTubeArtist, YouTubeTrack };
