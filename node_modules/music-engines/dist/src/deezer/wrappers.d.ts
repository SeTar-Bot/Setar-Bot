/// <reference types="node" />
import { DurationType } from "../typings/base";
import { DZAlbum, DZArtist, DZPlaylist, DZReleaseDate, DZSocials, DZTrack } from "../typings/deezer";
import { Base } from "../Base";
declare class DeezerTrack extends Base implements DZTrack {
    readonly picture: string;
    readonly url: string;
    readonly id: string;
    readonly title: string;
    readonly duration: DurationType;
    private raw;
    constructor(data: any);
    stream(): Promise<Buffer>;
    artists(): Promise<DeezerArtist[]>;
    album(): Promise<DeezerAlbum>;
    _DurationFormater(data: number, isMs: boolean): DurationType;
}
declare class DeezerArtist extends Base implements DZArtist {
    readonly id: string;
    readonly name: string;
    readonly url: string;
    readonly picture: string;
    readonly socials: DZSocials;
    private raw;
    constructor(data: any);
    tracks(): Promise<DeezerTrack[]>;
}
declare class DeezerAlbum extends Base implements DZAlbum {
    readonly id: string;
    readonly title: string;
    readonly url: string;
    readonly picture: string;
    readonly releaseDate: DZReleaseDate;
    readonly available: boolean;
    private raw;
    constructor(data: any);
    artists(): Promise<DeezerArtist[]>;
    tracks(): Promise<DeezerTrack[]>;
}
declare class DeezerPlaylist extends Base implements DZPlaylist {
    readonly title: string;
    readonly size: Number;
    readonly id: string;
    readonly picture: string;
    readonly url: string;
    readonly description: string;
    private raw;
    constructor(data: any);
    publisher(): Promise<DeezerArtist[] | any[]>;
    tracks(): Promise<DeezerTrack[]>;
}
export { DeezerAlbum, DeezerArtist, DeezerTrack, DeezerPlaylist };
